name: flutter_twitter_clone 
description: A new Flutter project.

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.7+12

environment:
  sdk: ">=2.18.1 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.5
  dartz: ^0.10.1
  get_it: ^7.2.0
  freezed_annotation: ^2.2.0 #冻结代码生成器的注释。如果不冷冻，这个包裹也什么都不做。
  cached_network_image: ^3.2.3 #Flutter library to load and cache network images. Can also be used with placeholder and error widgets.
  provider: ^6.0.5
  cloud_firestore: ^4.4.5 #Cloud Firestore 的 Flutter 插件，这是一个云托管的 noSQL 数据库，在 Android 和 iOS 上具有实时同步和离线支持。
  equatable: ^2.0.5
  http: ^0.13.5 
  image_picker: ^0.8.7
  package_info: ^2.0.2
  shared_preferences: ^2.0.20 #用于读写简单键值对的 Flutter 插件。在 iOS 上包装 NSUserDefaults，在 Android 上包装 SharedPreferences。
  google_sign_in: ^6.0.2  #用于 Google 登录的 Flutter 插件，用于在 Android 和 iOS 上使用 Google 帐户登录的安全身份验证系统。
  intl: ^0.18.0
  url_launcher: ^6.1.10
  share: ^2.0.4
  google_fonts: ^3.0.1 #使用来自 fonts.google.com 的字体的 Flutter 包。支持 HTTP 抓取、缓存和资产捆绑。
  firebase_storage: ^11.0.16  #用于 Firebase Cloud Storage 的 Flutter 插件，一种功能强大、简单且经济高效的对象存储服务，适用于 Android 和 iOS。
  firebase_auth: ^4.2.2  #Firebase Auth 的 Flutter 插件，使用密码、电话号码和身份提供商（如 Google、Facebook 和 Twitter）启用 Android 和 iOS 身份验证。
  firebase_database: ^10.0.16 #Firebase 数据库的 Flutter 插件，一个云托管的 NoSQL 数据库，具有跨 Android 和 iOS 客户端的实时数据同步，以及离线访问。
  firebase_analytics: ^10.1.6 #适用于 Google Analytics for Firebase 的 Flutter 插件，这是一种应用测量解决方案，可提供有关 Android 和 iOS 上应用使用情况和用户参与度的见解。
  firebase_messaging: ^14.3.0 #推送消息 适用于 Firebase Cloud Messaging 的 Flutter 插件，这是一种跨平台消息传递解决方案，可让您在 Android 和 iOS 上可靠地传递消息
  firebase_core: ^2.8.0 #Firebase Core 的 Flutter 插件，可以连接到多个 Firebase 应用程序。
  firebase_remote_config: ^3.0.15 #用于 Firebase 远程配置的 Flutter 插件。无需重新发布即可更新您的应用程序外观和行为。
  firebase_dynamic_links: ^5.0.17 #适用于 Firebase 的 Google Dynamic Links 的 Flutter 插件，一种用于创建和处理跨多个平台的链接的应用程序解决方案。
  qr_code_scanner: ^1.0.1 #可以嵌入 flutter 中的二维码扫描器。它在 Android 中使用 zxing，在 iOS 中使用 MTBBarcode 扫描器。
  qr_flutter: ^4.0.0 #QR.Flutter 是一个 Flutter 库，用于通过 Widget 或自定义画家进行简单快速的 QR 码渲染。
  rxdart: ^0.27.7 #RxDart 是流行的 reactiveX api 的实现，用于异步编程，利用原生的 Dart Streams api。
  translator: ^0.1.7 #适用于 Dart 的免费且无限制的 Google 翻译 API。您可以将它用于翻译字符串和文本以用于教育目的。
  flutter_chat_types: ^3.6.0  #聊天 包含共享类型声明的flutter_chat_ui和flutter_firebase_chat_core库的实用程序库。不应直接使用。
  link_preview_generator: ^1.2.0 #一个跨平台的 flutter 包，可将您的链接转换为丰富漂亮的预览。这个包的灵感来自Any Link Preview包，但是整个解析和抓取逻辑已经被重新编写，以更加健壮并支持更多链接。它还提供对小部件的完全自定义的控制。

dev_dependencies:
  test: ^1.22.0
  flutter_test: 
    sdk: flutter
  # freezed: ^0.12.6
  flutter_launcher_icons: ^0.12.0
  # build_runner: ^1.10.11
  # json_annotation: ^3.1.1
  # json_serializable: ^3.5.1

flutter_icons:
  ios: true
  android: true
  image_path_ios: "assets/images/icon-400.png"
  image_path_android: "assets/images/icon-400.png"
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
   - assets/images/icon-48.png
   - assets/images/icon-480.png
   - assets/images/icon-400.png
   - assets/images/qr.png
   - assets/images/bulb.png
   - assets/images/google_logo.png

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: TwitterIcon
      fonts:
        - asset: assets/fonts/icons.ttf
    - family: HelveticaNeue
      fonts:
        - asset: assets/fonts/HelveticaNeue.ttf
        - asset: assets/fonts/HelveticaNeue400.ttf
          weight: 400
        - asset: assets/fonts/HelveticaNeue500.ttf
          weight: 500
        - asset: assets/fonts/HelveticaNeue600.ttf
          weight: 600
        - asset: assets/fonts/HelveticaNeue700.ttf
          weight: 700
        - asset: assets/fonts/HelveticaNeue800.ttf
          weight: 800
        - asset: assets/fonts/HelveticaNeue900.ttf
          weight: 900
        - asset: assets/fonts/HelveticaNeueIt.ttf
          style: italic
          
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
